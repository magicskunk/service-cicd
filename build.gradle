plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.2.1'
	id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'dev.karambol'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.17.2")
	set('springCloudVersion', '2021.0.2')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.flywaydb:flyway-core:8.5.10'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	testImplementation 'com.playtika.testcontainers:embedded-postgresql:2.1.8'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jib {
	to {
		image = 'magicskunk/service-cicd'
	}
	container.entrypoint = [
			'java',
			'-Ddebug=${DEBUG_FLAG:false}',
			'-Duser.timezone=UTC',
			'-Dspring.profiles.active=${SERVICE_CICD_SPRING_PROFILE:default}',
			'-cp',
			'@/app/jib-classpath-file',
			'dev.karambol.servicecicd.ServiceCicdApplication'
	]
}

springBoot {
	buildInfo()
}

tasks.named('test') {
	useJUnitPlatform()
}
